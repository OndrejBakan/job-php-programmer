openapi: 3.0.0
info:
  title: ondrejbakan/job-php-programmer
  description: My take at the simplo-sro/job-php-programmer task.
  version: 1.0.0
servers:
  - url: https://job-php-programmer.162-19-245-187.bakan.cz/api/v1
    description: Demo server. Database gets refreshed every hour.
  - url: http://127.0.0.1:8000/api/v1
    description: For local testing.
paths:
  /customers:
    get:
      summary: Get all customers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
              example:
                - id: 1
                  name: John Doe
                  created_at: 2023-06-23T20:04:02.000000Z
                  updated_at: 2023-06-23T20:04:02.000000Z
                - id: 2
                  name: Jane Doe
                  created_at: 2023-06-23T20:04:02.000000Z
                  updated_at: 2023-06-23T20:04:02.000000Z
    post:
      summary: Create new customer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'John Doe'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /customers/{id}:
    get:
      summary: Get a customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: include
          in: query
          description: Comma separated list of requested relations.
          required: false
          schema:
            type: string
            example: 'customerGroups'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Not Found
    patch:
      summary: Update customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'John Doe'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Delete a customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: No Content
        404:
          description: Not Found
  /customers/{id}/customer-groups:
    post:
      summary: Attach customer to group(s)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_groups:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWithCustomerGroups'
    put:
      summary: Set customer's group(s)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_groups:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWithCustomerGroups'
    delete:
      summary: Detach customer from group(s)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWithCustomerGroups'
components: 
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'John Doe'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CustomerWithCustomerGroups:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'John Doe'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        customer_groups:
          type: array
          items:
            $ref: '#/components/schemas/CustomerGroup'
    CustomerGroup:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Developers'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time